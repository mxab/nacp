telemetry {
    logging {
        level = "info"
        otel {
            enabled = true
        }

    }

    metrics {
        enabled = true
    }
    tracing {
        enabled = true
    }
}

nomad {
    address = "http://{{ env "attr.unique.advertise.address" }}"
}


validator "opa" "very_important" {

    opa_rule {
        query = <<EOH
        errors := []
        EOH
        filename = "/local/validators/costcenter_meta.rego"
    }
}
validator "opa" "costcenter" {

    opa_rule {
        query = <<EOH
        errors = data.costcenter_meta.errors
        EOH
        filename = "/local/validators/costcenter_meta.rego"
    }
}
# not ideal for production, but useful for testing
{{- range nomadService "mockhooks" }}
validator "webhook" "some_remote_validator" {
    webhook {

        endpoint = "http://{{ .Address }}:{{ .Port }}/validate"

        method = "POST"
    }
}
{{- end }}
mutator "opa_json_patch" "hello_world" {

    #resolve_token = true
    opa_rule {
        query = <<EOH
        patch = data.hello_world_meta.patch
        EOH
        filename = "/local/mutators/hello_world_meta.rego"
    }
}
# not ideal for production, but useful for testing
{{- range nomadService "mockhooks" }}
mutator "json_patch_webhook" "a_remote_mutator" {
    webhook {

        endpoint = "http://{{ .Address }}:{{ .Port }}/mutate"

        method = "POST"
    }
}
{{- end }}
