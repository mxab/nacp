telemetry {
    logging {
        type = "otel"
    }
    metrics {
        enabled = true
    }
    tracing {
        enabled = true
    }
}

nomad {
    address = "http://{{ env "attr.unique.advertise.address" }}"
}


validator "opa" "very_important" {

    opa_rule {
        query = <<EOH
        errors := []
        EOH
        filename = "/local/validators/costcenter_meta.rego"
    }
}
validator "opa" "other_stuff" {

    opa_rule {
        query = <<EOH
        errors := []
        EOH
        filename = "/local/validators/costcenter_meta.rego"
    }
}
validator "opa" "costcenter" {

    opa_rule {
        query = <<EOH
        errors = data.costcenter_meta.errors
        EOH
        filename = "/local/validators/costcenter_meta.rego"
    }
}
mutator "opa_json_patch" "hello_world" {

    #resolve_token = true
    opa_rule {
        query = <<EOH
        patch = data.hello_world_meta.patch
        EOH
        filename = "/local/mutators/hello_world_meta.rego"
    }
}
mutator "opa_json_patch" "foo" {

    #resolve_token = true
    opa_rule {
        query = <<EOH
        patch := []
        EOH
        filename = "/local/mutators/hello_world_meta.rego"
    }
}
